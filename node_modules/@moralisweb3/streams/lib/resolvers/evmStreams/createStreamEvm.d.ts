import { Camelize } from '@moralisweb3/core';
import { EvmChain, EvmChainish } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare const name = "CreateStream";
declare type Name = typeof name;
declare type BodyParams = operations[Name]['requestBody']['content']['application/json'];
declare type ApiParams = BodyParams;
export interface CreateStreamEvmParams extends Camelize<Omit<ApiParams, 'chainIds'>> {
    chains: EvmChainish[];
}
export declare const createStreamEvm: import("@moralisweb3/api-utils").EndpointFactory<{
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    chainIds: string[];
}, CreateStreamEvmParams, {
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    chainIds: string[];
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
    statusMessage?: string | undefined;
}, {
    chains: EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    chainIds: string[];
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
    statusMessage?: string | undefined;
}, {
    chainIds: (string | number)[];
    chains: EvmChain[];
    webhookUrl: string;
    description: string;
    tag: string;
    topic0?: string[] | null | undefined;
    allAddresses?: boolean | undefined;
    includeNativeTxs?: boolean | undefined;
    includeContractLogs?: boolean | undefined;
    includeInternalTxs?: boolean | undefined;
    abi?: {
        [key: string]: unknown;
    }[] | null | undefined;
    advancedOptions?: {
        topic0: string;
        filter?: {
            [key: string]: unknown;
        } | undefined;
        includeNativeTxs?: boolean | undefined;
    }[] | null | undefined;
    id?: string | undefined;
    status?: "active" | "paused" | "error" | undefined;
    statusMessage?: string | undefined;
}>;
export {};
//# sourceMappingURL=createStreamEvm.d.ts.map